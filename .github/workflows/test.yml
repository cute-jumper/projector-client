name: Tests

on:
  push:
    branches: [master]
  pull_request:
    types: [ assigned, opened, synchronize, reopened ]
    branches: [master]

jobs:
  test:

    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
#      - name: install Chrome
#        run: |
#          chmod +x ./scripts/InstallChrome.sh
#          ./scripts/InstallChrome.sh
      - name: gradle clean
        run: ./gradlew clean

      - name: gradle check ubuntu
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          chmod +x ./scripts/InstallChrome.sh
          ./scripts/InstallChrome.sh
          ./gradlew check -Dselenide.browserBinary=/snap/chromium/current/usr/lib/chromium-browser/chrome -Dwebdriver.chrome.driver=chromedriver
      - name: gradle check windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          ./gradlew check  -Dwebdriver.chrome.driver=chromedriver.exe
      - name: gradle check macOS
        if: ${{ matrix.os == 'macOS-latest' }}
        run: |
          ./gradlew check  -Dwebdriver.chrome.driver=chromedriver_mac

      - name: gradle make jacoco reports
        run: |
          ./gradlew :projector-server-core:jacocoTestReport
          ./gradlew :projector-common:jacocoTestReport
          ./gradlew :projector-agent-common:jacocoTestReport
          ./gradlew :projector-agent-ij-injector:jacocoTestReport
          ./gradlew :projector-client-common:jacocoTestReport
          ./gradlew :projector-util-agent:jacocoTestReport
          ./gradlew :projector-client-web:browserTest
      - name: test coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./JacocoReports/
